// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// datasource db {
//   provider     = "mysql"
//   url          = env("DATABASE_URL")
//   relationMode = "prisma"
// }

model User {
  id String @id @default(cuid())

  email_address String @unique
  username      String @unique

  name                  String
  affiliation           String
  contact_email_address String
  website               String

  type String // organization | personal

  created DateTime @default(now())

  Access       Access[]
  Notification Notification[]

  @@index([email_address, username])
}

model Notification {
  id String @id @default(cuid())

  user    User   @relation(fields: [user_id], references: [id])
  user_id String

  title   String @default("")
  content String @default("")

  read Boolean @default(false)

  created DateTime @default(now())
  updated DateTime @updatedAt

  @@index([user_id])
}

model Access {
  id String @id @default(cuid())

  user    User   @relation(fields: [user_id], references: [id])
  user_id String

  project    Project @relation(fields: [project_id], references: [id])
  project_id String

  permission String @default("read") // read | write | admin

  created DateTime @default(now())
  updated DateTime @updatedAt

  @@index([user_id, project_id])
}

model Invite {
  id String @id @default(cuid())

  email_address String

  project    Project @relation(fields: [project_id], references: [id])
  project_id String

  permission String @default("read") // read | write | admin

  created DateTime @default(now())
  updated DateTime @updatedAt

  @@index([email_address, project_id])
}

model Project {
  id String @id @default(cuid())

  title       String @default("")
  description String @default("")
  image       String @default("https://api.dicebear.com/6.x/shapes/svg")

  created DateTime @default(now())

  identifier String @unique // might use a link shortener for this (p1234)

  Versions Version[]
  Access   Access[]
  Invite   Invite[]

  @@index([identifier])
}

model Version {
  id String @id @default(cuid())

  Project    Project @relation(fields: [project_id], references: [id])
  project_id String

  name String @default("") // 23.5.30.1 (using calver for this)

  changelog String @default("")

  identifier String @unique // might use a link shortener for this (v1234)

  created DateTime @default(now())
  updated DateTime @updatedAt

  published    Boolean  @default(false)
  published_on DateTime

  Links Link[]

  @@index([identifier, project_id])
}

model Link {
  id String @id @default(cuid())

  type   String // doi, url, ror, orcid, etc (prefix from identifiers.org)
  target String // the actual identifier (10.1234/abc)

  title       String @default("")
  description String @default("")

  icon String @default("mdi:resource-description-framework")

  back_link String @default("") // the link to the resource that links to this one

  created DateTime @default(now())
  updated DateTime @updatedAt

  Version  Version[]
  Relation Relation[]
}

model Relation {
  id String @id @default(cuid())

  link   Link   @relation(fields: [source], references: [id])
  source String

  type String // citation, isCitedBy, etc (prefix from identifiers.org)

  target      String // can be a internal link or external link
  target_type String // book, article, etc

  created DateTime @default(now())
  updated DateTime @updatedAt
}

model Analytics {
  id String @id @default(cuid())

  identifier String
  type       String // project, version, link, etc

  created DateTime @default(now())
}
